//
// Control
//
// Used to combine different components and objects into one control
// The main control needs to be the first child of Control class to work properly

@if $generate-component-classes {
  .control {
    position: relative;
    @include fontsize($fontsize-normal);
  }

  label.control {
    margin-bottom: 0;
  }

  @if $control-valid-classname and $control-error-classname {
    //
    // feedback inside control
    //
    .control > .feedback {
      position: absolute;
      right: 0;
      bottom: 100%;
      display: none;
      padding: $control-feedback-padding;
      margin-bottom: $control-feedback-arrow-size + $control-feedback-offset-bottom;
      border-radius: border-radius();
      color: $control-feedback-color;
      box-shadow: box-shadow($control-feedback-shadow);
      @include gradient-background($control-feedback-background, 180deg);

      @include before {
        content: "";
        position: absolute;
        top: 100%;
        right: $control-feedback-arrow-offset-right;
        @include triangle(bottom, $control-feedback-arrow-size, $control-feedback-background);
      }
    }

    .control.is-#{$control-valid-classname} > .feedback.is-#{$control-valid-classname} {
      @extend %display-block;
    }

    .control.is-#{$control-error-classname} > .feedback.is-#{$control-error-classname} {
      @extend %display-block;
    }

    .is-validated .control {
      > .file:required,
      > .input:required {
        &:valid ~ .feedback.is-#{$control-valid-classname} {
          @extend %display-block;
        }

        &:invalid ~ .feedback.is-#{$control-error-classname} {
          @extend %display-block;
        }
      }

      > input[type="checkbox"]:required {
        &:checked ~ .feedback.is-#{$control-valid-classname} {
          @extend %display-block;
        }

        &:not(:checked) ~ .feedback.is-#{$control-error-classname} {
          @extend %display-block;
        }
      }
    }
  }
}
